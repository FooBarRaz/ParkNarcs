import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';
import { RootState, AppThunk } from '../../app/store';

export interface UserState {
    userId?: string;
    username?: string;
    signedIn: boolean;
}

const initialState: UserState = {
    signedIn: false,
};

export const userSlice = createSlice({
    name: 'user',
    initialState,
    // The `reducers` field lets us define reducers and generate associated actions
    reducers: {
        signIn: (state, action: PayloadAction<{userId: string, username: string}>) => {
            state.signedIn = true
            state.userId = action.payload.userId
            state.username = action.payload.username
        },
        signOut: (state) => {
            return { signedIn: false }
        }
    },
    // The `extraReducers` field lets the slice handle actions defined elsewhere,
    // including actions generated by createAsyncThunk or in other slices.
    extraReducers: (builder) =>  builder
});

export const {signIn, signOut} = userSlice.actions;

// export const selectCount = (state: RootState) => state.counter.value;

export default userSlice.reducer;
